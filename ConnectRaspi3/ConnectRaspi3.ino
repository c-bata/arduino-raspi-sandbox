int ir_out = 13;
//pcから文字列が送られてきていないときは、strにnを格納
byte str=0;
int temperature = 0;

// エアコンオン（暖房）
//暖房
unsigned int dh[] = {380,189,47,46,47,141,47,46,48,141,48,46,47,141,48,46,47,141,48,46,48,140,48,46,48,140,48,141,48,46,48,141,48,46,48,141,48,140,48,140,48,140,48,46,48,46,47,140,48,140,48,46,48,46,48,45,48,46,48,140,48,46,48,46,48,46,48,140,48,46,48,140,48,46,48,46,47,46,52,41,47,46,48,140,48,46,48,46,47,46,48,141,47,141,48,45,48,46,47,140,48,46,48,46,47,46,48,46,48,141,48,46,48,46,48,46,48,45,48,46,47,46,48,46,48,46,48,46,48,46,47,46,48,46,48,46,47,140,48,46,47,46,48,46,47,46,48,46,48,46,48,46,47,46,47,46,47,46,48,46,48,141,48,46,48,46,48,46,47,46,47,47,47,46,47,46,47,46,47,46,47,46,48,141,48,46,47,142,47,141,47,141,47,142,47,142,47,46,48,47,46,46,47,141,48,142,47,46,47,48,46,0};
//冷房
unsigned int dc[] = {384,186,51,46,48,137,51,46,47,141,48,46,47,138,51,46,47,138,51,46,47,138,51,46,47,138,51,138,51,43,44,148,51,39,51,137,51,142,50,134,51,137,51,43,54,43,47,137,52,137,51,43,43,53,51,43,47,42,51,137,52,46,50,43,47,47,47,138,51,42,51,141,51,43,48,42,51,46,48,42,42,54,51,134,51,42,52,45,48,42,54,134,49,48,48,43,51,46,48,141,51,42,48,42,51,42,51,42,51,137,55,42,48,46,48,42,56,38,51,46,51,43,51,42,48,42,56,38,56,38,51,46,45,48,40,54,48,137,56,38,51,46,51,43,50,40,56,41,53,37,52,42,42,54,51,43,50,39,56,37,56,132,44,54,51,42,50,39,56,38,51,42,56,41,45,49,51,42,52,38,56,38,56,133,54,43,47,138,56,132,56,132,43,145,52,137,56,42,51,42,51,42,52,132,56,38,56,41,48,46,50,0};
//除湿
unsigned int dd[] = {380,188,48,46,47,141,47,46,47,141,47,46,48,141,48,46,48,140,48,46,48,140,48,46,48,141,48,140,48,45,48,136,53,45,48,140,48,140,48,140,48,140,48,45,53,40,48,140,48,140,54,43,46,48,46,45,48,45,49,140,48,45,49,45,48,48,46,45,48,48,46,45,49,45,48,45,49,48,45,48,46,45,48,140,49,48,50,40,48,48,46,139,49,140,48,48,46,48,46,139,49,139,49,45,49,45,48,48,46,140,49,48,46,48,45,48,45,48,46,44,49,45,49,48,46,45,49,48,45,45,49,48,45,48,46,48,45,140,49,48,46,48,45,48,45,48,46,48,46,48,46,48,45,48,46,48,45,48,46,48,45,140,49,48,45,48,46,48,46,48,46,47,46,48,46,48,46,48,46,48,46,48,46,139,49,48,46,139,50,139,49,139,49,140,49,139,49,48,45,48,46,48,46,48,46,48,45,140,49,48,46,0};
//停止
unsigned int ds[] = {380,188,48,45,48,140,48,46,48,140,48,46,48,140,48,46,48,140,48,46,48,140,48,46,48,140,48,141,47,46,48,141,48,46,48,140,48,141,48,141,48,140,48,46,48,46,47,141,48,140,48,46,47,46,48,46,47,46,48,140,48,45,48,47,47,45,48,141,48,45,48,141,48,46,48,46,47,46,48,46,48,46,48,141,48,46,48,47,47,45,48,46,48,140,48,46,48,46,47,141,48,46,48,46,47,46,48,45,48,140,48,46,48,46,47,45,48,46,48,45,48,46,48,45,48,46,48,46,48,45,48,46,48,45,48,46,48,140,48,45,48,46,48,46,48,46,48,46,48,45,48,45,48,46,48,46,47,46,48,46,47,140,48,46,48,45,48,46,48,45,48,46,48,46,48,46,48,46,48,46,48,46,48,140,48,46,48,140,48,141,48,140,48,140,48,141,48,45,48,46,48,46,48,46,48,140,48,46,48,46,47,0};


void setup() { 
        pinMode(ir_out, OUTPUT); 
        Serial.begin(9600);
}

//暖房
void heater() {
  int dataSize = sizeof(dh) / sizeof(dh[0]);
  for (int cnt = 0; cnt < dataSize; cnt++) {
    unsigned long len = dh[cnt]*10;  // dataは10us単位でON/OFF時間を記録している
    unsigned long us = micros();
    do {
      digitalWrite(ir_out, 1 - (cnt&1)); // cntが偶数なら赤外線ON、奇数ならOFFのまま
      delayMicroseconds(8);  // キャリア周波数38kHzでON/OFFするよう時間調整
      digitalWrite(ir_out, 0);
      delayMicroseconds(7);
    } while (long(us + len - micros()) > 0); // 送信時間に達するまでループ
  }
}

//冷房
void cooler() {
  int dataSize = sizeof(dc) / sizeof(dc[0]);
  for (int cnt = 0; cnt < dataSize; cnt++) {
    unsigned long len = dc[cnt]*10;  // dataは10us単位でON/OFF時間を記録している
    unsigned long us = micros();
    do {
      digitalWrite(ir_out, 1 - (cnt&1)); // cntが偶数なら赤外線ON、奇数ならOFFのまま
      delayMicroseconds(8);  // キャリア周波数38kHzでON/OFFするよう時間調整
      digitalWrite(ir_out, 0);
      delayMicroseconds(7);
    } while (long(us + len - micros()) > 0); // 送信時間に達するまでループ
  }
}

//除湿
void dehumidifier() {
  int dataSize = sizeof(dd) / sizeof(dd[0]);
  for (int cnt = 0; cnt < dataSize; cnt++) {
    unsigned long len = dd[cnt]*10;  // dataは10us単位でON/OFF時間を記録している
    unsigned long us = micros();
    do {
      digitalWrite(ir_out, 1 - (cnt&1)); // cntが偶数なら赤外線ON、奇数ならOFFのまま
      delayMicroseconds(8);  // キャリア周波数38kHzでON/OFFするよう時間調整
      digitalWrite(ir_out, 0);
      delayMicroseconds(7);
    } while (long(us + len - micros()) > 0); // 送信時間に達するまでループ
  }
}

//停止
void stop() {
  int dataSize = sizeof(ds) / sizeof(ds[0]);
  for (int cnt = 0; cnt < dataSize; cnt++) {
    unsigned long len = ds[cnt]*10;  // dataは10us単位でON/OFF時間を記録している
    unsigned long us = micros();
    do {
      digitalWrite(ir_out, 1 - (cnt&1)); // cntが偶数なら赤外線ON、奇数ならOFFのまま
      delayMicroseconds(8);  // キャリア周波数38kHzでON/OFFするよう時間調整
      digitalWrite(ir_out, 0);
      delayMicroseconds(7);
    } while (long(us + len - micros()) > 0); // 送信時間に達するまでループ
  }
}

void loop() {

        if(Serial.available() > 0){

                str = Serial.read();
                //Serial.print(str); //for debug

                if(str == 'h'){
                        heater();
                        //Raspberry Piに信号を送信するときは,文字ではなく文字列で送る。
                        Serial.println("Success");
                        str = 0;
                }
                else if(str == 'c'){
                        cooler();
                        Serial.println("Success");
                        str = 0;
                }
                else if(str == 'd'){
                        dehumidifier();
                        Serial.println("Success");
                        str = 0;
                }
                else if(str == 's'){
                        stop();
                        Serial.println("Success");
                        str = 0;
                }
                else if(str == 't'){
                        temperature = 20; //温度センサから室温を取得したとする
                        Serial.println(temperature);
                        str = 0;
                }
        }
        //delay(1000);
}
